# Artillery Performance Test Configuration
# Video Processing Pipeline Load Testing

config:
  target: 'http://localhost:3000'
  phases:
    # Warm-up phase: 10 users for 2 minutes
    - duration: 120
      arrivalRate: 1
      name: "Warm-up Phase"
    # Main load phase: 100 users over 10 minutes
    - duration: 600
      arrivalRate: 10
      name: "Main Load Phase"
    # Cool-down phase: 20 users for 2 minutes
    - duration: 120
      arrivalRate: 1
      name: "Cool-down Phase"
  
  # Global configuration
  http:
    timeout: 300  # 5 minutes timeout for large file uploads
    pool: 20      # Connection pool size
  
  # Plugin configuration for metrics collection
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  
  # Environment variables
  variables:
    # Test file configurations
    smallFileSize: 10485760    # 10MB
    mediumFileSize: 52428800   # 50MB
    largeFileSize: 104857600   # 100MB (max allowed)
    
    # File types distribution (weighted)
    fileTypes:
      - { type: "video/mp4", weight: 60 }
      - { type: "video/avi", weight: 15 }
      - { type: "video/mov", weight: 10 }
      - { type: "audio/mp3", weight: 10 }
      - { type: "audio/wav", weight: 5 }
    
    # Language codes
    languages:
      - { code: "en", weight: 70 }
      - { code: "es", weight: 15 }
      - { code: "fr", weight: 10 }
      - { code: "de", weight: 5 }
    
    # Video types for analysis configuration
    videoTypes:
      - { type: "educational", weight: 40 }
      - { type: "tutorial", weight: 30 }
      - { type: "presentation", weight: 20 }
      - { type: "demo", weight: 10 }

scenarios:
  # Scenario 1: Basic file upload test
  - name: "File Upload Test"
    weight: 100
    flow:
      - post:
          url: "/files"
          form:
            file: "test-file.txt"
            uploadData: '{"languageCode": "en"}'
          expect:
            - statusCode: [201, 400]  # Accept both success and validation errors
      
      # Check file list
      - get:
          url: "/files"
          expect:
            - statusCode: 200

# Custom functions for test data generation
functions: {}

# Performance thresholds based on requirements
thresholds:
  # Response time thresholds
  - http.response_time.p95: 30000  # 95% of requests under 30 seconds
  - http.response_time.p99: 60000  # 99% of requests under 60 seconds
  - http.response_time.median: 15000  # Median response time under 15 seconds
  
  # Throughput thresholds
  - http.request_rate: 8  # Minimum 8 requests per second sustained
  - http.request_rate.max: 15  # Peak request rate
  
  # Error rate thresholds
  - http.codes.400: 5  # Max 5% 400 errors (invalid files)
  - http.codes.500: 1  # Max 1% 500 errors (server errors)
  - http.codes.201: 90  # Min 90% successful uploads
  
  # Custom metrics thresholds
  - upload_success_rate: 90  # Min 90% successful uploads
  - average_file_processing_time: 300000  # Max 5 minutes average processing time

# Output configuration
output:
  # Console output with detailed metrics
  console:
    level: info
  
  # Optional: Save results to file
  # file: ./artillery-results.json
  
  # Optional: Generate HTML report
  # html: ./artillery-report.html

# Additional configuration for monitoring
monitoring:
  # System resource monitoring (if available)
  system:
    enabled: true
    metrics:
      - cpu
      - memory
      - disk
      - network

# Environment-specific overrides
environments:
  development:
    target: 'http://localhost:3000'
    phases:
      - duration: 60
        arrivalRate: 2
        name: "Dev Load Test"
  
  staging:
    target: 'https://staging-api.example.com'
    phases:
      - duration: 300
        arrivalRate: 5
        name: "Staging Load Test"
  
  production:
    target: 'https://api.example.com'
    phases:
      - duration: 600
        arrivalRate: 10
        name: "Production Load Test"
